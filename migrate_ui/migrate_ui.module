<?php

define('MIGRATE_ACCESS_BASIC', 'migration information');
define('MIGRATE_ACCESS_ADVANCED', 'advanced migration information');

function migrate_ui_help($path, $arg) {
  switch ($path) {
    case 'admin/content/migrate':
      return t('The current status of each migration defined in this system. Click on a migration name for details on its configuration.');
  }
}

/**
 * Implementation of hook_permission().
 */
function migrate_ui_permission() {
  return array(
    MIGRATE_ACCESS_BASIC => array(
      'title' => t('Access to basic migration information'),
    ),
    MIGRATE_ACCESS_ADVANCED => array(
      'title' => t('Access to advanced migration information'),
    ),
  );
}

/**
 * Implementation of hook_menu().
 */
function migrate_ui_menu() {
  $items = array();

  $items['admin/content/migrate'] = array(
    'title' => 'Migrate',
    'type' => MENU_LOCAL_TASK | MENU_NORMAL_ITEM,
    'description' => 'Monitor the creation of Drupal content from source data',
    'page callback' => 'migrate_ui_dashboard',
    'access arguments' => array(MIGRATE_ACCESS_BASIC),
    'file' => 'migrate_ui.pages.inc',
  );
  $items['admin/content/migrate/dashboard'] = array(
    'title' => 'Dashboard',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -10,
  );
  $items['admin/content/migrate/registration'] = array(
    'title' => 'Registration',
    'type' => MENU_LOCAL_TASK,
    'description' => 'Configure class registration',
    'page callback' => 'migrate_ui_registration',
    'access arguments' => array(MIGRATE_ACCESS_ADVANCED),
    'file' => 'migrate_ui.pages.inc',
    'weight' => 5,
  );
  $items['admin/content/migrate/handlers'] = array(
    'title' => 'Handlers',
    'type' => MENU_LOCAL_TASK,
    'description' => 'Configure migration handlers',
    'page callback' => 'migrate_ui_handlers',
    'access arguments' => array(MIGRATE_ACCESS_ADVANCED),
    'file' => 'migrate_ui.pages.inc',
    'weight' => 100,
  );
  $items['admin/content/migrate/messages/%_migrate_ui'] = array(
    'title callback' => '_migrate_ui_title',
    'title arguments' => array(4),
    'description' => 'View messages from a migration',
    'page callback' => 'migrate_ui_messages',
    'page arguments' => array(4),
    'access arguments' => array(MIGRATE_ACCESS_ADVANCED),
    'file' => 'migrate_ui.pages.inc',
  );
  $items['admin/content/migrate/details/%_migrate_ui'] = array(
    'title callback' => '_migrate_ui_title',
    'title arguments' => array(4),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('migrate_migration_info', 4),
    'access arguments' => array(MIGRATE_ACCESS_BASIC),
    'file' => 'migrate_ui.pages.inc',
  );

  // Add menu items for each implemented import wizard.
  $wizards = migrate_ui_wizards();
  foreach ($wizards as $wizard_class => $wizard) {
    $items["admin/content/migrate/import/$wizard_class"] = array(
      'type' => MENU_LOCAL_TASK,
      'title' => 'Import from @source_title',
      'title arguments' => array('@source_title' => $wizard->getSourceName()),
      'page callback' => 'drupal_get_form',
      'page arguments' => array('migrate_ui_wizard', $wizard_class),
      'access arguments' => array(MIGRATE_ACCESS_BASIC),
      'file' => 'migrate_ui.wizard.inc',
    );
  }

  return $items;
}

/**
 * Implements hook_menu_local_tasks_alter().
 */
function migrate_ui_menu_local_tasks_alter(&$data, $router_item, $root_path) {
  // Add action links to our import wizards on 'admin/content' page.
  if ($root_path == 'admin/content') {
    foreach (migrate_ui_wizards() as $wizard_class => $wizard) {
      $item = menu_get_item("admin/content/migrate/import/$wizard_class");
      if ($item['access']) {
        $data['actions']['output'][] = array(
          '#theme' => 'menu_local_action',
          '#link' => $item,
        );
      }
    }
  }
}

/**
 * Menu load callback - load the migration before calling the form.
 *
 * @param $machine_name
 *
 * @return mixed
 */
function _migrate_ui_load($machine_name) {
  if ($machine_name) {
    return Migration::getInstance($machine_name);
  }
}

/**
 * Title callback - use the specified migration's machine name as a menu title.
 *
 * @param $migration
 *
 * @return mixed
 */
function _migrate_ui_title($migration) {
  if (is_string($migration)) {
    $migration = _migrate_ui_load($migration);
  }
  return $migration->getMachineName();
}

/**
 * Get info on all modules supporting an import wizard.
 *
 * @return array
 *  key: machine_name for a particular wizard implementation. Used in the menu
 *    link.
 *  value: Wizard configuration array containing:
 *    source_title -
 */
function migrate_ui_wizards() {
  $migrate_implementors = module_invoke_all('migrate_api');
  $wizards = array();
  if (isset($migrate_implementors['wizard classes'])) {
    foreach ($migrate_implementors['wizard classes'] as $wizard_class) {
      $wizard_class = strtolower($wizard_class);
      $wizards[$wizard_class] = new $wizard_class;
    }
  }
  return $wizards;
}
