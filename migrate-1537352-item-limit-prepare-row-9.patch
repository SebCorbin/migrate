From 7d9dd8a736f9433a81087bd299b58952df45a4d9 Mon Sep 17 00:00:00 2001
From: James Sansbury <james.sansbury@lullabot.com>
Date: Wed, 18 Apr 2012 10:09:25 -0400
Subject: [PATCH] Issue #153735: Check to see if the iterator should stop
 *after* each item has been processed.

---
 includes/migration.inc    |   20 +++++++++---------
 migrate.info              |    1 +
 tests/import/options.test |   50 +++++++++++++++++++++++++++++++++++++++++++++
 3 files changed, 61 insertions(+), 10 deletions(-)
 create mode 100644 tests/import/options.test

diff --git a/includes/migration.inc b/includes/migration.inc
index fbfad66..be43bfd 100644
--- a/includes/migration.inc
+++ b/includes/migration.inc
@@ -514,16 +514,6 @@ abstract class Migration extends MigrationBase {
     $return = MigrationBase::RESULT_COMPLETED;
 
     foreach ($this->source as $data_row) {
-      if ($this->timeOptionExceeded()) {
-        break;
-      }
-      if (($return = $this->checkStatus()) != MigrationBase::RESULT_COMPLETED) {
-        break;
-      }
-      if ($this->itemOptionExceeded()) {
-        break;
-      }
-
       $this->currentSourceKey = $this->source->getCurrentKey();
 
       // Wipe old messages
@@ -572,6 +562,16 @@ abstract class Migration extends MigrationBase {
       if (!empty($this->destination->entityType)) {
         entity_get_controller($this->destination->entityType)->resetCache();
       }
+
+      if ($this->timeOptionExceeded()) {
+        break;
+      }
+      if (($return = $this->checkStatus()) != MigrationBase::RESULT_COMPLETED) {
+        break;
+      }
+      if ($this->itemOptionExceeded()) {
+        break;
+      }
     }
 
     $this->progressMessage($return);
diff --git a/migrate.info b/migrate.info
index 4e43baa..49faf5c 100644
--- a/migrate.info
+++ b/migrate.info
@@ -37,6 +37,7 @@ files[] = plugins/sources/sqlmap.inc
 files[] = plugins/sources/mssql.inc
 files[] = plugins/sources/oracle.inc
 files[] = plugins/sources/xml.inc
+files[] = tests/import/options.test
 files[] = tests/plugins/destinations/comment.test
 files[] = tests/plugins/destinations/node.test
 files[] = tests/plugins/destinations/table.test
diff --git a/tests/import/options.test b/tests/import/options.test
new file mode 100644
index 0000000..14bcb5a
--- /dev/null
+++ b/tests/import/options.test
@@ -0,0 +1,50 @@
+<?php
+
+/**
+ * Test node migration.
+ */
+class MigrateImportOptionsTest extends DrupalWebTestCase {
+  public static function getInfo() {
+    return array(
+      'name' => 'Import options',
+      'description' => 'Test the import options',
+      'group' => 'Migrate',
+    );
+  }
+
+  function setUp() {
+    parent::setUp('migrate_example');
+  }
+
+  function testItemLimitOption() {
+    $migration = Migration::getInstance('BeerTerm');
+    $limit = 1;
+    $options = array(
+      'limit' => array(
+        'unit' => 'item',
+        'value' => $limit,
+      ),
+    );
+
+    // We use the timers to track how many times prepareRow() is called.
+    global $timers, $_migrate_track_timer;
+    $_migrate_track_timer = TRUE;
+
+    $result = $migration->processImport($options);
+
+    $this->verbose(print_r($timers, 1));
+    $successes = $migration->importedCount();
+    $this->verbose("Total successes: {$successes}");
+    $assertion = format_plural($limit, 'The migration successfully processed 1 item.',
+      'The migration successfully processed @count items.');
+    $this->assertEqual($limit, $successes, $assertion);
+
+    $prepare_row_count = $timers['BeerTermMigration prepareRow']['count'];
+    $this->verbose("prepareRow() count: {$prepare_row_count}");
+    $processed = $migration->processedCount();
+    $this->verbose("Total processed count: {$processed}");
+    $assertion = format_plural($processed, 'The migration executed processRow() on 1 item.',
+      'The migration executed processRow() on @count items.');
+    $this->assertEqual($prepare_row_count, $processed, $assertion);
+  }
+}
-- 
1.7.10

